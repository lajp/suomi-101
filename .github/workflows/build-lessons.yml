name: Build Typst Lessons

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

  
permissions:
  contents: write  # required for publishing releases

jobs:
  build:
    name: Build all lessons
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Nix
        uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Build all lesson packages
        run: |
          # Build all lesson derivations defined in the flake
          #nix build --print-build-logs .#packages.x86_64-linux.default
          for pkg in $(nix eval --json .#packages.x86_64-linux | jq -r 'keys[]'); do
            if [ "$pkg" != "default" ]; then
              echo "üèóÔ∏è Building $pkg"
              nix build --print-build-logs ".#packages.x86_64-linux.${pkg}"
            fi
          done

      - name: Collect PDF outputs
        run: |
          mkdir -p outputs
          for pkg in $(nix eval --json .#packages.x86_64-linux | jq -r 'keys[]'); do
            if [ "$pkg" != "default" ]; then
              out_path=$(nix build --print-out-paths ".#packages.x86_64-linux.${pkg}")
              find "$out_path" -type f -name '*.pdf' -exec cp {} outputs/ \;
            fi
          done

      - name: Upload PDFs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: built-lessons
          path: outputs/

      - name: Create or update rolling release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: "Latest Typst Lessons Build"
          body: |
            This release contains the most recent build of all Typst lessons.
            
            Commit: ${{ github.sha }}
            Branch: ${{ github.ref_name }}
          draft: false
          prerelease: true
          files: outputs/*.pdf
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
